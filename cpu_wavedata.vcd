$date
	Wed Jun 04 09:39:53 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INSTRUCTION [31:0] $end
$var reg 1 # CLK $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 # clk $end
$var wire 32 % instruction [31:0] $end
$var wire 1 $ reset $end
$var wire 3 & writereg [2:0] $end
$var wire 1 ' writeable $end
$var wire 8 ( regout2 [7:0] $end
$var wire 8 ) regout1 [7:0] $end
$var wire 3 * readreg2 [2:0] $end
$var wire 3 + readreg1 [2:0] $end
$var wire 8 , operand2 [7:0] $end
$var wire 8 - opcode [7:0] $end
$var wire 8 . negatedOp [7:0] $end
$var wire 1 / mux2op $end
$var wire 8 0 mux1out [7:0] $end
$var wire 1 1 mux1op $end
$var wire 8 2 immediate [7:0] $end
$var wire 8 3 aluresult [7:0] $end
$var wire 3 4 aluop [2:0] $end
$var reg 32 5 pc [31:0] $end
$scope module mux1 $end
$var wire 1 1 SELECT $end
$var wire 8 6 IN2 [7:0] $end
$var wire 8 7 IN1 [7:0] $end
$var reg 8 8 OUT [7:0] $end
$upscope $end
$scope module mux2 $end
$var wire 8 9 IN1 [7:0] $end
$var wire 8 : IN2 [7:0] $end
$var wire 1 / SELECT $end
$var reg 8 ; OUT [7:0] $end
$upscope $end
$scope module my_alu $end
$var wire 8 < op2 [7:0] $end
$var wire 3 = select [2:0] $end
$var wire 8 > result [7:0] $end
$var wire 8 ? op1 [7:0] $end
$var wire 8 @ D [7:0] $end
$var wire 8 A C [7:0] $end
$var wire 8 B B [7:0] $end
$var wire 8 C A [7:0] $end
$scope module addsub1 $end
$var wire 8 D op2 [7:0] $end
$var wire 8 E op1 [7:0] $end
$var reg 8 F B [7:0] $end
$upscope $end
$scope module and1 $end
$var wire 8 G op2 [7:0] $end
$var wire 8 H op1 [7:0] $end
$var reg 8 I C [7:0] $end
$upscope $end
$scope module forwardUnit1 $end
$var wire 8 J op2 [7:0] $end
$var reg 8 K A [7:0] $end
$upscope $end
$scope module mux1 $end
$var wire 8 L A [7:0] $end
$var wire 8 M B [7:0] $end
$var wire 8 N C [7:0] $end
$var wire 3 O select [2:0] $end
$var wire 8 P D [7:0] $end
$var reg 8 Q result [7:0] $end
$upscope $end
$scope module or1 $end
$var wire 8 R op2 [7:0] $end
$var wire 8 S op1 [7:0] $end
$var reg 8 T D [7:0] $end
$upscope $end
$upscope $end
$scope module my_cu $end
$var wire 8 U opcode [7:0] $end
$var reg 3 V aluop [2:0] $end
$var reg 1 1 mux1op $end
$var reg 1 / mux2op $end
$var reg 1 ' writeable $end
$upscope $end
$scope module my_reg $end
$var wire 1 # clk $end
$var wire 8 W in [7:0] $end
$var wire 3 X inaddress [2:0] $end
$var wire 8 Y out1 [7:0] $end
$var wire 3 Z out1address [2:0] $end
$var wire 8 [ out2 [7:0] $end
$var wire 3 \ out2address [2:0] $end
$var wire 1 $ reset $end
$var wire 1 ' write $end
$var integer 32 ] i [31:0] $end
$upscope $end
$scope module my_twosComp $end
$var wire 8 ^ IN [7:0] $end
$var wire 8 _ OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
x1
bx 0
x/
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
x'
bx &
bx %
1$
0#
bx "
bx !
$end
#4
1#
#5
b1000 ]
b0 !
b0 5
0$
#7
b100 &
b100 X
b0 +
b0 Z
b101 *
b101 \
b0 -
b0 U
b101 2
b101 :
b1000000000000000101 "
b1000000000000000101 %
#8
bx1x1 @
bx1x1 P
bx1x1 T
b0x0x A
b0x0x I
b0x0x N
b101 ,
b101 ;
b101 <
b101 D
b101 G
b101 J
b101 R
1'
1/
01
b0 4
b0 =
b0 O
b0 V
0#
#9
b101 3
b101 >
b101 Q
b101 W
b0 A
b0 I
b0 N
b101 @
b101 P
b101 T
b0 0
b0 8
b0 9
b101 B
b101 F
b101 M
b101 C
b101 K
b101 L
b0 )
b0 ?
b0 E
b0 H
b0 S
b0 Y
b0 (
b0 7
b0 [
b0 ^
#10
b0 .
b0 6
b0 _
#12
1#
#13
b100 !
b100 5
#15
b1001 @
b1001 P
b1001 T
b10 &
b10 X
b1 *
b1 \
b1001 ,
b1001 ;
b1001 <
b1001 D
b1001 G
b1001 J
b1001 R
b1001 2
b1001 :
b100000000000001001 "
b100000000000001001 %
#16
b1001 3
b1001 >
b1001 Q
b1001 W
b1001 B
b1001 F
b1001 M
b1001 C
b1001 K
b1001 L
0#
#20
1#
#21
b1000 !
b1000 5
#23
b10 @
b10 P
b10 T
b110 &
b110 X
b100 +
b100 Z
b10 *
b10 \
b10 ,
b10 ;
b10 <
b10 D
b10 G
b10 J
b10 R
b10 -
b10 U
b10 2
b10 :
b10000001100000010000000010 "
b10000001100000010000000010 %
#24
b0 @
b0 P
b0 T
b0 ,
b0 ;
b0 <
b0 D
b0 G
b0 J
b0 R
b10 3
b10 >
b10 Q
b10 W
b10 B
b10 F
b10 M
b10 C
b10 K
b10 L
0/
b1 4
b1 =
b1 O
b1 V
0#
#25
b1 A
b1 I
b1 N
b1001 ,
b1001 ;
b1001 <
b1001 D
b1001 G
b1001 J
b1001 R
b101 3
b101 >
b101 Q
b101 W
b1101 @
b1101 P
b1101 T
b1001 0
b1001 8
b1001 9
b101 B
b101 F
b101 M
b0 C
b0 K
b0 L
b101 )
b101 ?
b101 E
b101 H
b101 S
b101 Y
b1001 (
b1001 7
b1001 [
b1001 ^
#26
b1110 3
b1110 >
b1110 Q
b1110 W
b1110 B
b1110 F
b1110 M
b1001 C
b1001 K
b1001 L
b11110111 .
b11110111 6
b11110111 _
#28
1#
#29
b1100 !
b1100 5
#31
b0 &
b0 X
b0 +
b0 Z
b110 *
b110 \
b1 -
b1 U
b110 2
b110 :
b1000000000000000000000110 "
b1000000000000000000000110 %
#32
b1001 3
b1001 >
b1001 Q
b1001 W
b0 4
b0 =
b0 O
b0 V
0#
#33
b1110 ,
b1110 ;
b1110 <
b1110 D
b1110 G
b1110 J
b1110 R
b0 A
b0 I
b0 N
b1110 @
b1110 P
b1110 T
b1110 0
b1110 8
b1110 9
b0 )
b0 ?
b0 E
b0 H
b0 S
b0 Y
b1110 (
b1110 7
b1110 [
b1110 ^
#34
b1110 3
b1110 >
b1110 Q
b1110 W
b1110 C
b1110 K
b1110 L
b11110010 .
b11110010 6
b11110010 _
#36
1#
#37
b10000 !
b10000 5
#39
b110 &
b110 X
b100 +
b100 Z
b10 *
b10 \
b1110 A
b1110 I
b1110 N
b11 -
b11 U
b10 2
b10 :
b1110 )
b1110 ?
b1110 E
b1110 H
b1110 S
b1110 Y
b11000001100000010000000010 "
b11000001100000010000000010 %
#40
b11111110 @
b11111110 P
b11111110 T
b10 A
b10 I
b10 N
b11110010 ,
b11110010 ;
b11110010 <
b11110010 D
b11110010 G
b11110010 J
b11110010 R
b11110010 0
b11110010 8
b11110010 9
11
b10 4
b10 =
b10 O
b10 V
b11100 B
b11100 F
b11100 M
0#
#41
b0 A
b0 I
b0 N
b11110111 @
b11110111 P
b11110111 T
b11110111 B
b11110111 F
b11110111 M
b11110010 C
b11110010 K
b11110010 L
b101 )
b101 ?
b101 E
b101 H
b101 S
b101 Y
b1001 (
b1001 7
b1001 [
b1001 ^
#42
b101 A
b101 I
b101 N
b11110111 ,
b11110111 ;
b11110111 <
b11110111 D
b11110111 G
b11110111 J
b11110111 R
b11110111 0
b11110111 8
b11110111 9
b11110111 .
b11110111 6
b11110111 _
b0 3
b0 >
b0 Q
b0 W
#43
b11111100 B
b11111100 F
b11111100 M
b11110111 C
b11110111 K
b11110111 L
#44
b101 3
b101 >
b101 Q
b101 W
1#
#45
b10100 !
b10100 5
#47
b0 &
b0 X
b0 +
b0 Z
b110 *
b110 \
b1 -
b1 U
b110 2
b110 :
b1000000000000000000000110 "
b1000000000000000000000110 %
#48
b1 A
b1 I
b1 N
b1101 @
b1101 P
b1101 T
b1001 ,
b1001 ;
b1001 <
b1001 D
b1001 G
b1001 J
b1001 R
b1001 0
b1001 8
b1001 9
b11110111 3
b11110111 >
b11110111 Q
b11110111 W
01
b0 4
b0 =
b0 O
b0 V
0#
#49
b101 ,
b101 ;
b101 <
b101 D
b101 G
b101 J
b101 R
b1001 3
b1001 >
b1001 Q
b1001 W
b1111 @
b1111 P
b1111 T
b100 A
b100 I
b100 N
b101 0
b101 8
b101 9
b10111 B
b10111 F
b10111 M
b1001 C
b1001 K
b1001 L
b1110 )
b1110 ?
b1110 E
b1110 H
b1110 S
b1110 Y
b101 (
b101 7
b101 [
b101 ^
#50
b101 3
b101 >
b101 Q
b101 W
b10011 B
b10011 F
b10011 M
b101 C
b101 K
b101 L
b11111011 .
b11111011 6
b11111011 _
#52
1#
#53
b11000 !
b11000 5
#55
bx &
bx X
bx +
bx Z
bx *
bx \
b101 @
b101 P
b101 T
b101 A
b101 I
b101 N
bx -
bx U
bx 2
bx :
b101 )
b101 ?
b101 E
b101 H
b101 S
b101 Y
bx "
bx %
#56
0'
b1010 B
b1010 F
b1010 M
0#
#57
bx ,
bx ;
bx <
bx D
bx G
bx J
bx R
bx A
bx I
bx N
bx @
bx P
bx T
bx 0
bx 8
bx 9
bx )
bx ?
bx E
bx H
bx S
bx Y
bx (
bx 7
bx [
bx ^
#58
bx 3
bx >
bx Q
bx W
bx C
bx K
bx L
bx B
bx F
bx M
bx .
bx 6
bx _
#60
1#
#61
b11100 !
b11100 5
#64
0#
#68
1#
#69
b100000 !
b100000 5
#72
0#
#76
1#
#77
b100100 !
b100100 5
#80
0#
#84
1#
#85
b101000 !
b101000 5
#88
0#
#92
1#
#93
b101100 !
b101100 5
#96
0#
#100
1#
#101
b110000 !
b110000 5
#104
0#
#108
1#
#109
b110100 !
b110100 5
#112
0#
#116
1#
#117
b111000 !
b111000 5
#120
0#
#124
1#
#125
b111100 !
b111100 5
#128
0#
#132
1#
#133
b1000000 !
b1000000 5
#136
0#
#140
1#
#141
b1000100 !
b1000100 5
#144
0#
#148
1#
#149
b1001000 !
b1001000 5
#152
0#
#156
1#
#157
b1001100 !
b1001100 5
#160
0#
#164
1#
#165
b1010000 !
b1010000 5
#168
0#
#172
1#
#173
b1010100 !
b1010100 5
#176
0#
#180
1#
#181
b1011000 !
b1011000 5
#184
0#
#188
1#
#189
b1011100 !
b1011100 5
#192
0#
#196
1#
#197
b1100000 !
b1100000 5
#200
0#
#204
1#
#205
b1100100 !
b1100100 5
#208
0#
#212
1#
#213
b1101000 !
b1101000 5
#216
0#
#220
1#
#221
b1101100 !
b1101100 5
#224
0#
#228
1#
#229
b1110000 !
b1110000 5
#232
0#
#236
1#
#237
b1110100 !
b1110100 5
#240
0#
#244
1#
#245
b1111000 !
b1111000 5
#248
0#
#252
1#
#253
b1111100 !
b1111100 5
#256
0#
#260
1#
#261
b10000000 !
b10000000 5
#264
0#
#268
1#
#269
b10000100 !
b10000100 5
#272
0#
#276
1#
#277
b10001000 !
b10001000 5
#280
0#
#284
1#
#285
b10001100 !
b10001100 5
#288
0#
#292
1#
#293
b10010000 !
b10010000 5
#296
0#
#300
1#
#301
b10010100 !
b10010100 5
#304
0#
#308
1#
#309
b10011000 !
b10011000 5
#312
0#
#316
1#
#317
b10011100 !
b10011100 5
#320
0#
#324
1#
#325
b10100000 !
b10100000 5
#328
0#
#332
1#
#333
b10100100 !
b10100100 5
#336
0#
#340
1#
#341
b10101000 !
b10101000 5
#344
0#
#348
1#
#349
b10101100 !
b10101100 5
#352
0#
#356
1#
#357
b10110000 !
b10110000 5
#360
0#
#364
1#
#365
b10110100 !
b10110100 5
#368
0#
#372
1#
#373
b10111000 !
b10111000 5
#376
0#
#380
1#
#381
b10111100 !
b10111100 5
#384
0#
#388
1#
#389
b11000000 !
b11000000 5
#392
0#
#396
1#
#397
b11000100 !
b11000100 5
#400
0#
#404
1#
#405
b11001000 !
b11001000 5
#408
0#
#412
1#
#413
b11001100 !
b11001100 5
#416
0#
#420
1#
#421
b11010000 !
b11010000 5
#424
0#
#428
1#
#429
b11010100 !
b11010100 5
#432
0#
#436
1#
#437
b11011000 !
b11011000 5
#440
0#
#444
1#
#445
b11011100 !
b11011100 5
#448
0#
#452
1#
#453
b11100000 !
b11100000 5
#456
0#
#460
1#
#461
b11100100 !
b11100100 5
#464
0#
#468
1#
#469
b11101000 !
b11101000 5
#472
0#
#476
1#
#477
b11101100 !
b11101100 5
#480
0#
#484
1#
#485
b11110000 !
b11110000 5
#488
0#
#492
1#
#493
b11110100 !
b11110100 5
#496
0#
#500
1#
#501
b11111000 !
b11111000 5
#504
0#
#505
